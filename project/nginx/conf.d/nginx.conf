worker_processes auto;
#worker_cpu_affinity auto;

events {
    multi_accept on;
    worker_connections 1024;
}

ht
    default_type application/octet-stream;

    # logging
    log_format  main  '$remote_addr - $remote_user [$time_local] "$request" '
                      '$status $body_bytes_sent "$http_referer" '
                      '"$http_user_agent" "$http_x_forwarded_for"';

    access_log  /var/log/nginx/logs/access.log  main;
    error_log /var/log/nginx/logs/error.log warn;

    server {
      listen 80;
      add_header Server Squares always;

      location / {
        set $do_not_cache 0;
        if ($http_cookie ~* ".+" ) {
          set $do_not_cache 1;
        }
        proxy_cache_bypass $do_not_cache;
        proxy_pass http://127.0.0.1:81/;
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_cache all;
        proxy_cache_methods GET HEAD;
        proxy_cache_valid any 1m;
      }
    }

    upstream backend_balanced {
      server 127.0.0.1:5432 weight=2;
      server 127.0.0.1:5433 weight=1;
      server 127.0.0.1:5434 weight=1;
    }

    upstream backend_main {
      server 127.0.0.1:5432;
    }



    map $request_method $backend
    {
      GET backend_balanced;
      HEAD backend_balanced;
      default backend_main;
    }


    server {
      listen 81;

      location / {
        proxy_pass http://127.0.0.1:8000;
      }

      location /test {
        proxy_pass http://127.0.0.1:8000;
      }

      location /admin {
        proxy_set_header X-Script-Name /admin;
        proxy_set_header X-Scheme $scheme;
        proxy_set_header Host $host;
        proxy_pass http://127.0.0.1:8000/admin;
        proxy_redirect off;
      }

      location /swagger {
        root /Users/ilalevuskin/github/GitHub/computer_networks/project/nginx/html;
        index index.html;
      }

      location /api {
        root /usr/share/nginx/html;
        rewrite ^/api/v\d(/.*\.(?:html|js|css)|/)?$ /swagger$1;
        try_files $uri $uri/index.html @api;
      }

      location @api {
        proxy_pass http://$backend$uri;
      }

      location /status {
        stub_status;
      }
    }
}

